name: Production CI Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Jest tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Create .env file
        run: |
          echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> .env
          echo "VITE_AUTH_DOMAIN=${{ secrets.VITE_AUTH_DOMAIN }}" >> .env
          echo "VITE_APP_ID=${{ secrets.VITE_APP_ID }}" >> .env

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: |
          ENV_VARS=$(grep -v '^#' .env | xargs -I {} echo "-e {}")
          vercel deploy --prebuilt --prod $ENV_VARS --token ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel Output
        run: vercel --token ${{ secrets.VERCEL_TOKEN }}
